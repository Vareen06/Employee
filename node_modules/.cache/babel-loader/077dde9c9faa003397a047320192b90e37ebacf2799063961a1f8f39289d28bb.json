{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\reactjs\\\\page\\\\src\\\\pages\\\\employeeSlice.js\";\nimport { Badge, Button } from \"@mui/material\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nimport { Delete, Add } from \"../components/PopUps\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  openSnackbar: false,\n  snackbarMessage: \"\",\n  columns: [{\n    field: 'SrNo',\n    headerName: 'SrNo',\n    width: 200,\n    headerAlign: 'center',\n    align: 'center'\n  }, {\n    field: 'name',\n    headerName: 'Name',\n    width: 400,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: params => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [params.value, !params.row.isActive && /*#__PURE__*/_jsxDEV(Badge, {\n        color: \"error\",\n        variant: \"dot\",\n        sx: {\n          marginLeft: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)\n  }, {\n    field: 'salary',\n    headerName: 'Salary',\n    type: 'number',\n    width: 200,\n    headerAlign: 'center',\n    align: 'center'\n  }, {\n    field: 'action',\n    headerName: 'Action',\n    type: 'number',\n    width: 400,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: params => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\"\n\n        //   onClick={() => handleAction(params.row)}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Add, {\n          employeeID: params.row.id,\n          isActive: false,\n          option: false,\n          initialEmployeeDetails: params.row\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Delete, {\n          employeeID: params.row.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)\n  }],\n  rows: []\n};\nexport const employeeSlice = createSlice({\n  name: 'Work',\n  initialState,\n  reducers: {\n    addDetails: (state, action) => {\n      state.rows.push(action.payload);\n      // Ensure employees have sequential SrNo\n      state.rows.forEach((employee, index) => {\n        employee.SrNo = index + 1;\n      });\n      const storedData = localStorage.setItem('employees', JSON.stringify(state.rows));\n      console.log(storedData);\n      state.openSnackbar = true;\n      state.snackbarMessage = \"Employee added Successfully\";\n    },\n    deleteDetails: (state, action) => {\n      const id = action.payload;\n      // console.log(id)\n      const newEmployee = JSON.parse(localStorage.getItem('employees'));\n      const index = state.rows.findIndex(employee => employee.id === id);\n      newEmployee.splice(index, 1);\n      // console.log(deletedEmployee)\n      localStorage.setItem('employees', JSON.stringify(newEmployee));\n      state.rows = state.rows.filter(employee => employee.id !== id);\n      // console.log(state.rows)\n      state.rows.forEach((employee, index) => {\n        employee.SrNo = index + 1;\n        // console.log(state.rows)\n      });\n      state.openSnackbar = true;\n      state.snackbarMessage = \"Employee Deleted Succeddfully\";\n    },\n    updateDetails: (state, action) => {\n      const {\n        id,\n        updatedEmployee\n      } = action.payload;\n      console.log(updatedEmployee);\n      const index = state.rows.findIndex(employee => employee.id === id);\n      if (index !== -1) {\n        state.rows[index] = {\n          ...state.rows[index],\n          ...updatedEmployee\n        };\n      }\n      state.rows.forEach((employee, index) => {\n        employee.SrNo = index + 1;\n      });\n      localStorage.setItem('employees', JSON.stringify(state.rows));\n      state.openSnackbar = true;\n      state.snackbarMessage = \"Employee Updated Successfully\";\n    },\n    employeeList: (state, action) => {\n      state.rows = action.payload;\n    },\n    closeSnackbar: state => {\n      state.openSnackbar = !state.openSnackbar;\n      state.snackbarMessage = \"\";\n    }\n  }\n});\nexport const {\n  addDetails,\n  deleteDetails,\n  updateDetails,\n  employeeList,\n  closeSnackbar\n} = employeeSlice.actions;\nexport default employeeSlice.reducer;","map":{"version":3,"names":["Badge","Button","createSlice","Delete","Add","jsxDEV","_jsxDEV","Fragment","_Fragment","initialState","openSnackbar","snackbarMessage","columns","field","headerName","width","headerAlign","align","renderCell","params","children","value","row","isActive","color","variant","sx","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","type","employeeID","id","option","initialEmployeeDetails","rows","employeeSlice","name","reducers","addDetails","state","action","push","payload","forEach","employee","index","SrNo","storedData","localStorage","setItem","JSON","stringify","console","log","deleteDetails","newEmployee","parse","getItem","findIndex","splice","filter","updateDetails","updatedEmployee","employeeList","closeSnackbar","actions","reducer"],"sources":["D:/Web Development/reactjs/page/src/pages/employeeSlice.js"],"sourcesContent":["\r\nimport { Badge, Button } from \"@mui/material\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Delete, Add} from \"../components/PopUps\";\r\n\r\nconst initialState={\r\n  openSnackbar:false,\r\n  snackbarMessage:\"\",\r\n    columns:[\r\n        { field: 'SrNo', headerName: 'SrNo', width: 200,headerAlign:'center', align:'center' },\r\n        { field: 'name', headerName: 'Name', width: 400, headerAlign:'center',align:'center',\r\n          renderCell: (params) => (\r\n            <div >\r\n              {params.value}\r\n              {!params.row.isActive && (\r\n                <Badge color=\"error\" variant=\"dot\" sx={{ marginLeft: 1 }} />\r\n              )}\r\n            </div>\r\n          ),\r\n         },\r\n        { field: 'salary', headerName: 'Salary', type: 'number', width: 200,headerAlign:'center', align:'center' },\r\n        {\r\n          field: 'action',\r\n          headerName: 'Action',\r\n          type: 'number',\r\n          width: 400,\r\n          headerAlign:'center',\r\n          align:'center',\r\n          renderCell: (params) => (\r\n            <>\r\n           \r\n            <Button\r\n              variant=\"contained\"\r\n              \r\n            //   onClick={() => handleAction(params.row)}\r\n            >\r\n              <Add employeeID={params.row.id} isActive={false} option={false} initialEmployeeDetails={params.row}/>\r\n              <Delete employeeID={params.row.id}/>\r\n            </Button>\r\n            </>\r\n          )\r\n        },\r\n      ],\r\n      \r\n    rows :[],\r\n}\r\n\r\n\r\nexport const employeeSlice=createSlice({\r\n    name:'Work',\r\n    initialState,\r\n    reducers:{\r\n      addDetails: (state, action) => {\r\n        state.rows.push(action.payload);\r\n        // Ensure employees have sequential SrNo\r\n        state.rows.forEach((employee, index) => {\r\n          employee.SrNo = index + 1;\r\n        });\r\n        const storedData=localStorage.setItem('employees',JSON.stringify(state.rows))\r\n        console.log(storedData)\r\n        state.openSnackbar=true;\r\n        state.snackbarMessage=\"Employee added Successfully\";\r\n      },\r\n      deleteDetails: (state, action) => {\r\n        const id=action.payload;\r\n        // console.log(id)\r\n        const newEmployee=JSON.parse(localStorage.getItem('employees'));\r\n        const index = state.rows.findIndex(employee => employee.id === id);\r\n        newEmployee.splice(index,1)\r\n        // console.log(deletedEmployee)\r\n        localStorage.setItem('employees',JSON.stringify(newEmployee))\r\n        state.rows=state.rows.filter(employee=> employee.id !== id)\r\n        // console.log(state.rows)\r\n        state.rows.forEach((employee,index)=>{\r\n          employee.SrNo=index+1;\r\n          // console.log(state.rows)\r\n        }) \r\n        state.openSnackbar=true\r\n        state.snackbarMessage=\"Employee Deleted Succeddfully\";\r\n        \r\n      },\r\n      updateDetails: (state, action) => {\r\n        const {id,updatedEmployee }= action.payload;\r\n        console.log(updatedEmployee)\r\n        const index = state.rows.findIndex(employee => employee.id === id);\r\n        if (index !== -1) {\r\n          state.rows[index] = {...state.rows[index],...updatedEmployee}\r\n        }\r\n        state.rows.forEach((employee,index)=>{\r\n          employee.SrNo=index+1\r\n        })\r\n        localStorage.setItem('employees',JSON.stringify(state.rows))\r\n        state.openSnackbar=true;\r\n        state.snackbarMessage=\"Employee Updated Successfully\";\r\n      },\r\n      employeeList:(state,action)=>{\r\n        state.rows=action.payload\r\n      },\r\n      closeSnackbar:(state)=>{\r\n        state.openSnackbar=!state.openSnackbar;\r\n        state.snackbarMessage=\"\"\r\n      },\r\n  }\r\n  })\r\nexport const {addDetails,deleteDetails,updateDetails,employeeList,closeSnackbar}=employeeSlice.actions\r\nexport default employeeSlice.reducer\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}